// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Enquiry {
  id        String   @id @default(cuid())
  email     String
  name      String?
  subject   String?
  message   String
  createdAt DateTime @default(now())
}

model Testimonial {
  id        Int      @id @default(autoincrement())
  name      String
  role      String
  content   String   @db.Text
  avatar    String?  @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Blog {
  id              Int       @id @default(autoincrement())
  slug            String
  locale          String    // 'en' or 'hi'
  title           String
  content         String    @db.Text
  status          String    // 'draft', 'published', 'archived'
  metaDescription String?   @db.Text
  ogTitle         String?
  ogDescription   String?   @db.Text
  authorId        Int
  author          User      @relation(fields: [authorId], references: [id])
  category        Category? @relation(fields: [categoryId], references: [id])
  categoryId      Int?
  tags            Tag[]     @relation("BlogToTag")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@unique([slug, locale])
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  image     String?
  blogs     Blog[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String   @unique
  description String?  @db.Text
  blogs       Blog[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Tag {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String   @unique
  description String?  @db.Text
  blogs       Blog[]   @relation("BlogToTag")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

